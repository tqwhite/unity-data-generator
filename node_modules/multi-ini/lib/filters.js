'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["boolean"] = _boolean;
exports.constants = constants;
exports.integer = integer;
exports.lowercase = lowercase;
exports.trim = trim;
exports.uppercase = uppercase;

var _ = require('lodash');

function lowercase(value) {
  return _.isString(value) ? value.toLowerCase() : value;
}

function uppercase(value) {
  return _.isString(value) ? value.toUpperCase() : value;
}

function trim(value) {
  return _.isString(value) ? value.trim() : value;
}

function constants(value) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (!_.isString(value) || _.isEmpty(options.constants)) {
    return value;
  }

  _.forIn(options.constants, function (replacement, constant) {
    var matcher = new RegExp("\" ".concat(constant, " \""), 'g');
    value = value.replace(matcher, "".concat(replacement));
    matcher = new RegExp("\" ".concat(constant, "$"), 'g');
    value = value.replace(matcher, "".concat(replacement, "\""));
    matcher = new RegExp("^".concat(constant, " \""), 'g');
    value = value.replace(matcher, "\"".concat(replacement));
  });

  return value;
}

function _boolean(value) {
  if (!_.isString(value) || value.length > 5) {
    return value;
  }

  switch (value.toLowerCase()) {
    case 'on':
    case 'yes':
    case 'true':
      return true;

    case 'off':
    case 'no':
    case 'none':
    case 'false':
      return false;

    default:
      return value;
  }
}

function integer(value) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (isNaN(value) || isNaN(parseInt(value, 10)) || options.keep_zero_prefix && value.length > 1 && value[0] === '0' // dont drop zero prefixes
  ) {
    return value;
  }

  return parseInt(value, 10);
}