{"version":3,"file":"FetchInitPreprocessor-browser.js","sourceRoot":"","sources":["FetchInitPreprocessor-browser.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,qBAAqB;IACzB,KAAK,CAAC,MAAM,CAAC,IAAiB;QACnC,6EAA6E;QAC7E,+DAA+D;QAC/D,uDAAuD;QACvD,qDAAqD;QACrD,oEAAoE;QACpE,IAAI,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,WAAW,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YAC3E,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YACrC,MAAM,MAAM,GAAG,EAAE,CAAC;YAElB,OAAO,IAAI,EAAE,CAAC;gBACZ,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;gBAC5C,IAAI,IAAI,EAAE,CAAC;oBACT,MAAM;gBACR,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC;YACD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC9B,CAAC;QAED,0GAA0G;QAC1G,OAAO,EAAE,GAAG,IAAI,EAAE,SAAS,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAC5C,CAAC;CACF;AAxBD,sDAwBC","sourcesContent":["import type { IFetchInitPreprocessor } from './IFetchInitPreprocessor';\n\n/**\n * Overrides things for fetch requests in browsers\n */\nexport class FetchInitPreprocessor implements IFetchInitPreprocessor {\n  public async handle(init: RequestInit): Promise<RequestInit> {\n    // Browsers don't yet support passing ReadableStream as body to requests, see\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=688906\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1387483\n    // As such, we convert those bodies to a plain string\n    // TODO: remove this once browser support ReadableStream in requests\n    if (init.body && typeof init.body !== 'string' && 'getReader' in init.body) {\n      const reader = init.body.getReader();\n      const chunks = [];\n\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n          break;\n        }\n        chunks.push(value);\n      }\n      init.body = chunks.join('');\n    }\n\n    // Only enable keepalive functionality if we are not sending a body (some browsers seem to trip over this)\n    return { ...init, keepalive: !init.body };\n  }\n}\n"]}