{"version":3,"file":"ILink.js","sourceRoot":"","sources":["ILink.ts"],"names":[],"mappings":"","sourcesContent":["import type * as RDF from '@rdfjs/types';\nimport type { IActionContext } from './IActionContext';\n\n/**\n * A link holder that can expose additional properties.\n */\n\nexport interface ILink {\n  /**\n   * The URL identifying this link.\n   */\n  url: string;\n  /**\n   * An optional stream modifier.\n   * This transformation will be applied on the stream of data quads that is obtained from dereferencing the given URL.\n   * @param input The stream of data quads on the given URL.\n   * @returns The stream of data quads to be used for this link instead of the given stream.\n   */\n  transform?: (input: RDF.Stream) => Promise<RDF.Stream>;\n  /**\n   * Optional context to apply onto mediators when handling this link as source.\n   * All entries of this context will be added (or overwritten) into the existing context.\n   */\n  context?: IActionContext;\n  /**\n   * An optional link-specific metadata object.\n   * This may be used to keep track of data that is relevant to links,\n   * which could be used across actors.\n   */\n  metadata?: Record<string, any>;\n}\n"]}