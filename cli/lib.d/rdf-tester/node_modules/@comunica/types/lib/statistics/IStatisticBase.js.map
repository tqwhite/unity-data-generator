{"version":3,"file":"IStatisticBase.js","sourceRoot":"","sources":["IStatisticBase.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Statistics are able to track specific types of information during query execution.\n * It is possible to listen to events that are produced by each specific statistic.\n */\nexport interface IStatisticBase<T> {\n  /**\n   * Attaches a listener to the statistic to listen for new statistic events\n   * @param fn Callback to use the statistic data\n   * @returns\n   */\n  on: (fn: (data: T) => any) => IStatisticBase<T>;\n\n  /**\n   * Removes a listener from the statistic\n   * @param fn Callback to remove\n   * @returns\n   */\n  removeListener: (fn: (data: T) => any) => IStatisticBase<T>;\n\n  /**\n   * Emits a new statistic event to all listeners\n   * @param data Statistic data to emit\n   * @returns\n   */\n  emit: (data: T) => boolean;\n\n  /**\n   * @returns All listeners on statistic\n   */\n  getListeners: () => ((data: T) => any)[];\n\n  /**\n   * Updates the statistic with new information from query processing\n   * @param data Statistic data to process\n   * @returns\n   */\n  updateStatistic: (...data: any[]) => void;\n}\n"]}